---
- name: Install yum utils
  yum:
    name: yum-utils
    state: latest

- name: Install device-mapper-persistent-data
  yum:
    name: device-mapper-persistent-data
    state: latest

- name: Install lvm2
  yum:
    name: lvm2
    state: latest

- name: Add Docker repo
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
  become: yes

- name: Enable Docker Edge repo
  ini_file:
    dest: /etc/yum.repos.d/docker-ce.repo
    section: 'docker-ce-edge'
    option: enabled
    value: 0
  become: yes

- name: Enable Docker Test repo
  ini_file:
    dest: /etc/yum.repos.d/docker-ce.repo
    section: 'docker-ce-test'
    option: enabled
    value: 0
  become: yes

- name: Initialize docker_installed variable
  set_fact:
    docker_installed: "False"

- name: Check if rpm is already installed
  yum:
    list: docker
  # If not installed yum_list.results[*].yumstate != installed
  register: yum_list

- name: Conditionally set variable
  set_fact:
    docker_installed: "True"
  when: yum_list.results | selectattr("yumstate", "match", "installed") | list | length != 0

- name: Stop Docker service and disable
  service:
    name: docker
    state: stopped
    enabled: no
  when: docker_installed

- name: Uninstall Docker
  package:
    name: 
      - docker
      - docker-client
      - docker-client-latest 
      - docker-common 
      - docker-latest 
      - docker-latest-logrotate 
      - docker-logrotate 
      - docker-engine
    state: absent
  when: docker_installed

- name: Install Docker
  package:
    name: 
      - docker-ce
      - docker-ce-cli 
      - containerd.io
    state: latest
  become: yes

- name: Configure Docker daemon
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
        "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }

- name: Start Docker service
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes
  become: yes
  
